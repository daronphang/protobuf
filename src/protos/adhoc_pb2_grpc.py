# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import shared_pb2 as shared__pb2


class AdhocStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.heartbeat = channel.unary_unary(
                '/Adhoc/heartbeat',
                request_serializer=shared__pb2.HeartBeatRequest.SerializeToString,
                response_deserializer=shared__pb2.HeartBeatResponse.FromString,
                )
        self.query = channel.unary_unary(
                '/Adhoc/query',
                request_serializer=shared__pb2.QueryRequest.SerializeToString,
                response_deserializer=shared__pb2.QueryResponse.FromString,
                )
        self.task = channel.unary_unary(
                '/Adhoc/task',
                request_serializer=shared__pb2.TaskRequest.SerializeToString,
                response_deserializer=shared__pb2.TaskResponse.FromString,
                )
        self.taskStatus = channel.unary_unary(
                '/Adhoc/taskStatus',
                request_serializer=shared__pb2.TaskStatusRequest.SerializeToString,
                response_deserializer=shared__pb2.TaskStatusResponse.FromString,
                )


class AdhocServicer(object):
    """Missing associated documentation comment in .proto file."""

    def heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def taskStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdhocServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.heartbeat,
                    request_deserializer=shared__pb2.HeartBeatRequest.FromString,
                    response_serializer=shared__pb2.HeartBeatResponse.SerializeToString,
            ),
            'query': grpc.unary_unary_rpc_method_handler(
                    servicer.query,
                    request_deserializer=shared__pb2.QueryRequest.FromString,
                    response_serializer=shared__pb2.QueryResponse.SerializeToString,
            ),
            'task': grpc.unary_unary_rpc_method_handler(
                    servicer.task,
                    request_deserializer=shared__pb2.TaskRequest.FromString,
                    response_serializer=shared__pb2.TaskResponse.SerializeToString,
            ),
            'taskStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.taskStatus,
                    request_deserializer=shared__pb2.TaskStatusRequest.FromString,
                    response_serializer=shared__pb2.TaskStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Adhoc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Adhoc(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Adhoc/heartbeat',
            shared__pb2.HeartBeatRequest.SerializeToString,
            shared__pb2.HeartBeatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Adhoc/query',
            shared__pb2.QueryRequest.SerializeToString,
            shared__pb2.QueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Adhoc/task',
            shared__pb2.TaskRequest.SerializeToString,
            shared__pb2.TaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def taskStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Adhoc/taskStatus',
            shared__pb2.TaskStatusRequest.SerializeToString,
            shared__pb2.TaskStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
